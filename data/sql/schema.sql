CREATE TABLE account (id BIGINT AUTO_INCREMENT, client_id BIGINT, domain_name VARCHAR(255) NOT NULL, description LONGTEXT, active TINYINT(1) DEFAULT '0' NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX client_id_idx (client_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE account_invoice (id BIGINT AUTO_INCREMENT, account_id BIGINT, ref_no VARCHAR(255) UNIQUE, ammount_due DECIMAL(18, 2), description LONGTEXT, paid_off TINYINT(1) DEFAULT '0' NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX account_id_idx (account_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE account_invoice_task (id BIGINT AUTO_INCREMENT, account_invoice_id BIGINT NOT NULL, task_id BIGINT NOT NULL, INDEX account_invoice_id_idx (account_invoice_id), INDEX task_id_idx (task_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE account_record (id BIGINT AUTO_INCREMENT, account_id BIGINT, name VARCHAR(255) NOT NULL, description LONGTEXT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX account_id_idx (account_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE client (id BIGINT AUTO_INCREMENT, user_id BIGINT, firstname VARCHAR(255), lastname VARCHAR(255), track_record LONGTEXT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX user_id_idx (user_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE staff (id BIGINT AUTO_INCREMENT, user_id BIGINT, firstname VARCHAR(255), lastname VARCHAR(255), title VARCHAR(255), bio LONGTEXT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX user_id_idx (user_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE staff_task_work (id BIGINT AUTO_INCREMENT, staff_id BIGINT NOT NULL, task_work_id BIGINT NOT NULL, INDEX staff_id_idx (staff_id), INDEX task_work_id_idx (task_work_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE task (id BIGINT AUTO_INCREMENT, account_id BIGINT NOT NULL, staff_id BIGINT, task_status_id BIGINT NOT NULL, task_type_id BIGINT NOT NULL, task_priority_id BIGINT NOT NULL, task_work_id BIGINT NOT NULL, ref_no VARCHAR(255) UNIQUE, name VARCHAR(255), description LONGTEXT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX account_id_idx (account_id), INDEX staff_id_idx (staff_id), INDEX task_status_id_idx (task_status_id), INDEX task_type_id_idx (task_type_id), INDEX task_priority_id_idx (task_priority_id), INDEX task_work_id_idx (task_work_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE task_comment (id BIGINT AUTO_INCREMENT, task_id BIGINT NOT NULL, staff_id BIGINT NOT NULL, title VARCHAR(255), comment LONGTEXT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX task_id_idx (task_id), INDEX staff_id_idx (staff_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE task_log (id BIGINT AUTO_INCREMENT, task_id BIGINT NOT NULL, task_work_id BIGINT NOT NULL, staff_id BIGINT NOT NULL, title VARCHAR(255), description LONGTEXT, hours_logged DECIMAL(18, 2), created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX task_id_idx (task_id), INDEX task_work_id_idx (task_work_id), INDEX staff_id_idx (staff_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE task_priority (id BIGINT AUTO_INCREMENT, name VARCHAR(255), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE task_status (id BIGINT AUTO_INCREMENT, name VARCHAR(255), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE task_type (id BIGINT AUTO_INCREMENT, name VARCHAR(255), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE task_work (id BIGINT AUTO_INCREMENT, name VARCHAR(255), rate DECIMAL(18, 2), description LONGTEXT, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_forgot_password (id BIGINT AUTO_INCREMENT, user_id BIGINT NOT NULL, unique_key VARCHAR(255), expires_at DATETIME NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX user_id_idx (user_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_group (id BIGINT AUTO_INCREMENT, name VARCHAR(255) UNIQUE, description TEXT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_group_permission (group_id BIGINT, permission_id BIGINT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(group_id, permission_id)) ENGINE = INNODB;
CREATE TABLE sf_guard_permission (id BIGINT AUTO_INCREMENT, name VARCHAR(255) UNIQUE, description TEXT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_remember_key (id BIGINT AUTO_INCREMENT, user_id BIGINT, remember_key VARCHAR(32), ip_address VARCHAR(50), created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX user_id_idx (user_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_user (id BIGINT AUTO_INCREMENT, first_name VARCHAR(255), last_name VARCHAR(255), email_address VARCHAR(255) NOT NULL UNIQUE, username VARCHAR(128) NOT NULL UNIQUE, algorithm VARCHAR(128) DEFAULT 'sha1' NOT NULL, salt VARCHAR(128), password VARCHAR(128), is_active TINYINT(1) DEFAULT '1', is_super_admin TINYINT(1) DEFAULT '0', last_login DATETIME, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX is_active_idx_idx (is_active), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_user_group (user_id BIGINT, group_id BIGINT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(user_id, group_id)) ENGINE = INNODB;
CREATE TABLE sf_guard_user_permission (user_id BIGINT, permission_id BIGINT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(user_id, permission_id)) ENGINE = INNODB;
ALTER TABLE account ADD CONSTRAINT account_client_id_client_id FOREIGN KEY (client_id) REFERENCES client(id);
ALTER TABLE account_invoice ADD CONSTRAINT account_invoice_account_id_account_id FOREIGN KEY (account_id) REFERENCES account(id);
ALTER TABLE account_invoice_task ADD CONSTRAINT account_invoice_task_task_id_task_id FOREIGN KEY (task_id) REFERENCES task(id);
ALTER TABLE account_invoice_task ADD CONSTRAINT account_invoice_task_account_invoice_id_account_invoice_id FOREIGN KEY (account_invoice_id) REFERENCES account_invoice(id);
ALTER TABLE account_record ADD CONSTRAINT account_record_account_id_account_id FOREIGN KEY (account_id) REFERENCES account(id);
ALTER TABLE client ADD CONSTRAINT client_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id);
ALTER TABLE staff ADD CONSTRAINT staff_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id);
ALTER TABLE staff_task_work ADD CONSTRAINT staff_task_work_task_work_id_task_work_id FOREIGN KEY (task_work_id) REFERENCES task_work(id);
ALTER TABLE staff_task_work ADD CONSTRAINT staff_task_work_staff_id_staff_id FOREIGN KEY (staff_id) REFERENCES staff(id);
ALTER TABLE task ADD CONSTRAINT task_task_work_id_task_work_id FOREIGN KEY (task_work_id) REFERENCES task_work(id);
ALTER TABLE task ADD CONSTRAINT task_task_type_id_task_type_id FOREIGN KEY (task_type_id) REFERENCES task_type(id);
ALTER TABLE task ADD CONSTRAINT task_task_status_id_task_status_id FOREIGN KEY (task_status_id) REFERENCES task_status(id);
ALTER TABLE task ADD CONSTRAINT task_task_priority_id_task_priority_id FOREIGN KEY (task_priority_id) REFERENCES task_priority(id);
ALTER TABLE task ADD CONSTRAINT task_staff_id_staff_id FOREIGN KEY (staff_id) REFERENCES staff(id);
ALTER TABLE task ADD CONSTRAINT task_account_id_account_id FOREIGN KEY (account_id) REFERENCES account(id);
ALTER TABLE task_comment ADD CONSTRAINT task_comment_task_id_task_id FOREIGN KEY (task_id) REFERENCES task(id);
ALTER TABLE task_comment ADD CONSTRAINT task_comment_staff_id_staff_id FOREIGN KEY (staff_id) REFERENCES staff(id);
ALTER TABLE task_log ADD CONSTRAINT task_log_task_work_id_task_work_id FOREIGN KEY (task_work_id) REFERENCES task_work(id);
ALTER TABLE task_log ADD CONSTRAINT task_log_task_id_task_id FOREIGN KEY (task_id) REFERENCES task(id);
ALTER TABLE task_log ADD CONSTRAINT task_log_staff_id_staff_id FOREIGN KEY (staff_id) REFERENCES staff(id);
ALTER TABLE sf_guard_forgot_password ADD CONSTRAINT sf_guard_forgot_password_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_group_permission ADD CONSTRAINT sf_guard_group_permission_permission_id_sf_guard_permission_id FOREIGN KEY (permission_id) REFERENCES sf_guard_permission(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_group_permission ADD CONSTRAINT sf_guard_group_permission_group_id_sf_guard_group_id FOREIGN KEY (group_id) REFERENCES sf_guard_group(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_remember_key ADD CONSTRAINT sf_guard_remember_key_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user_group ADD CONSTRAINT sf_guard_user_group_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user_group ADD CONSTRAINT sf_guard_user_group_group_id_sf_guard_group_id FOREIGN KEY (group_id) REFERENCES sf_guard_group(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user_permission ADD CONSTRAINT sf_guard_user_permission_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user_permission ADD CONSTRAINT sf_guard_user_permission_permission_id_sf_guard_permission_id FOREIGN KEY (permission_id) REFERENCES sf_guard_permission(id) ON DELETE CASCADE;
