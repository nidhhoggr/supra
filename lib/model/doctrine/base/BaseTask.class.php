<?php

/**
 * BaseTask
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $account_id
 * @property integer $staff_id
 * @property integer $task_status_id
 * @property integer $task_type_id
 * @property integer $task_priority_id
 * @property integer $task_work_id
 * @property string $ref_no
 * @property string $name
 * @property clob $description
 * @property Account $Account
 * @property Staff $Staff
 * @property TaskStatus $TaskStatus
 * @property TaskType $TaskType
 * @property TaskPriority $TaskPriority
 * @property TaskWork $TaskWork
 * @property Doctrine_Collection $AccountInvoice
 * @property Doctrine_Collection $AccountInvoiceTask
 * @property Doctrine_Collection $TaskComment
 * @property Doctrine_Collection $TaskLog
 * 
 * @method integer             getId()                 Returns the current record's "id" value
 * @method integer             getAccountId()          Returns the current record's "account_id" value
 * @method integer             getStaffId()            Returns the current record's "staff_id" value
 * @method integer             getTaskStatusId()       Returns the current record's "task_status_id" value
 * @method integer             getTaskTypeId()         Returns the current record's "task_type_id" value
 * @method integer             getTaskPriorityId()     Returns the current record's "task_priority_id" value
 * @method integer             getTaskWorkId()         Returns the current record's "task_work_id" value
 * @method string              getRefNo()              Returns the current record's "ref_no" value
 * @method string              getName()               Returns the current record's "name" value
 * @method clob                getDescription()        Returns the current record's "description" value
 * @method Account             getAccount()            Returns the current record's "Account" value
 * @method Staff               getStaff()              Returns the current record's "Staff" value
 * @method TaskStatus          getTaskStatus()         Returns the current record's "TaskStatus" value
 * @method TaskType            getTaskType()           Returns the current record's "TaskType" value
 * @method TaskPriority        getTaskPriority()       Returns the current record's "TaskPriority" value
 * @method TaskWork            getTaskWork()           Returns the current record's "TaskWork" value
 * @method Doctrine_Collection getAccountInvoice()     Returns the current record's "AccountInvoice" collection
 * @method Doctrine_Collection getAccountInvoiceTask() Returns the current record's "AccountInvoiceTask" collection
 * @method Doctrine_Collection getTaskComment()        Returns the current record's "TaskComment" collection
 * @method Doctrine_Collection getTaskLog()            Returns the current record's "TaskLog" collection
 * @method Task                setId()                 Sets the current record's "id" value
 * @method Task                setAccountId()          Sets the current record's "account_id" value
 * @method Task                setStaffId()            Sets the current record's "staff_id" value
 * @method Task                setTaskStatusId()       Sets the current record's "task_status_id" value
 * @method Task                setTaskTypeId()         Sets the current record's "task_type_id" value
 * @method Task                setTaskPriorityId()     Sets the current record's "task_priority_id" value
 * @method Task                setTaskWorkId()         Sets the current record's "task_work_id" value
 * @method Task                setRefNo()              Sets the current record's "ref_no" value
 * @method Task                setName()               Sets the current record's "name" value
 * @method Task                setDescription()        Sets the current record's "description" value
 * @method Task                setAccount()            Sets the current record's "Account" value
 * @method Task                setStaff()              Sets the current record's "Staff" value
 * @method Task                setTaskStatus()         Sets the current record's "TaskStatus" value
 * @method Task                setTaskType()           Sets the current record's "TaskType" value
 * @method Task                setTaskPriority()       Sets the current record's "TaskPriority" value
 * @method Task                setTaskWork()           Sets the current record's "TaskWork" value
 * @method Task                setAccountInvoice()     Sets the current record's "AccountInvoice" collection
 * @method Task                setAccountInvoiceTask() Sets the current record's "AccountInvoiceTask" collection
 * @method Task                setTaskComment()        Sets the current record's "TaskComment" collection
 * @method Task                setTaskLog()            Sets the current record's "TaskLog" collection
 * 
 * @package    supra
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseTask extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('task');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('account_id', 'integer', 8, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 8,
             ));
        $this->hasColumn('staff_id', 'integer', 8, array(
             'type' => 'integer',
             'length' => 8,
             ));
        $this->hasColumn('task_status_id', 'integer', 8, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 8,
             ));
        $this->hasColumn('task_type_id', 'integer', 8, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 8,
             ));
        $this->hasColumn('task_priority_id', 'integer', 8, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 8,
             ));
        $this->hasColumn('task_work_id', 'integer', 8, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 8,
             ));
        $this->hasColumn('ref_no', 'string', 255, array(
             'type' => 'string',
             'unique' => true,
             'length' => 255,
             ));
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('description', 'clob', null, array(
             'type' => 'clob',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Account', array(
             'local' => 'account_id',
             'foreign' => 'id'));

        $this->hasOne('Staff', array(
             'local' => 'staff_id',
             'foreign' => 'id'));

        $this->hasOne('TaskStatus', array(
             'local' => 'task_status_id',
             'foreign' => 'id'));

        $this->hasOne('TaskType', array(
             'local' => 'task_type_id',
             'foreign' => 'id'));

        $this->hasOne('TaskPriority', array(
             'local' => 'task_priority_id',
             'foreign' => 'id'));

        $this->hasOne('TaskWork', array(
             'local' => 'task_work_id',
             'foreign' => 'id'));

        $this->hasMany('AccountInvoice', array(
             'refClass' => 'AccountInvoiceTask',
             'local' => 'task_id',
             'foreign' => 'account_invoice_id'));

        $this->hasMany('AccountInvoiceTask', array(
             'local' => 'id',
             'foreign' => 'task_id'));

        $this->hasMany('TaskComment', array(
             'local' => 'id',
             'foreign' => 'task_id'));

        $this->hasMany('TaskLog', array(
             'local' => 'id',
             'foreign' => 'task_id'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             ));
        $this->actAs($timestampable0);
    }
}