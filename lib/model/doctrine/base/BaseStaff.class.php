<?php

/**
 * BaseStaff
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $user_id
 * @property string $title
 * @property clob $bio
 * @property boolean $is_subcontractor
 * @property sfGuardUser $User
 * @property Doctrine_Collection $StaffTaskWork
 * @property Doctrine_Collection $Task
 * @property Doctrine_Collection $TaskComment
 * @property Doctrine_Collection $TaskLog
 * 
 * @method integer             getId()               Returns the current record's "id" value
 * @method integer             getUserId()           Returns the current record's "user_id" value
 * @method string              getTitle()            Returns the current record's "title" value
 * @method clob                getBio()              Returns the current record's "bio" value
 * @method boolean             getIsSubcontractor()  Returns the current record's "is_subcontractor" value
 * @method sfGuardUser         getUser()             Returns the current record's "User" value
 * @method Doctrine_Collection getStaffTaskWork()    Returns the current record's "StaffTaskWork" collection
 * @method Doctrine_Collection getTask()             Returns the current record's "Task" collection
 * @method Doctrine_Collection getTaskComment()      Returns the current record's "TaskComment" collection
 * @method Doctrine_Collection getTaskLog()          Returns the current record's "TaskLog" collection
 * @method Staff               setId()               Sets the current record's "id" value
 * @method Staff               setUserId()           Sets the current record's "user_id" value
 * @method Staff               setTitle()            Sets the current record's "title" value
 * @method Staff               setBio()              Sets the current record's "bio" value
 * @method Staff               setIsSubcontractor()  Sets the current record's "is_subcontractor" value
 * @method Staff               setUser()             Sets the current record's "User" value
 * @method Staff               setStaffTaskWork()    Sets the current record's "StaffTaskWork" collection
 * @method Staff               setTask()             Sets the current record's "Task" collection
 * @method Staff               setTaskComment()      Sets the current record's "TaskComment" collection
 * @method Staff               setTaskLog()          Sets the current record's "TaskLog" collection
 * 
 * @package    supra
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseStaff extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('staff');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('user_id', 'integer', 255, array(
             'type' => 'integer',
             'length' => 255,
             ));
        $this->hasColumn('title', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('bio', 'clob', null, array(
             'type' => 'clob',
             ));
        $this->hasColumn('is_subcontractor', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => 0,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('sfGuardUser as User', array(
             'local' => 'user_id',
             'foreign' => 'id'));

        $this->hasMany('StaffTaskWork', array(
             'local' => 'id',
             'foreign' => 'staff_id'));

        $this->hasMany('Task', array(
             'local' => 'id',
             'foreign' => 'staff_id'));

        $this->hasMany('TaskComment', array(
             'local' => 'id',
             'foreign' => 'staff_id'));

        $this->hasMany('TaskLog', array(
             'local' => 'id',
             'foreign' => 'staff_id'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             ));
        $this->actAs($timestampable0);
    }
}